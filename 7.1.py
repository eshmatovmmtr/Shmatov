# Реализовать класс Matrix (матрица).
# Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов
# класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        m_str = '\n'
        for r in self.matrix:
            for el in r:
                m_str += f'{el:>5}'
            m_str += '\n'
        return m_str

    def __add__(self, other):
        add = []
        if len(self.matrix) != len(other.matrix):
            print("Error")
            return
        for i in range(len(self.matrix)):
            if len(self.matrix[i]) != len(other.matrix[i]):
                print("Error")
                return
            r = []
            for I in range(len(self.matrix[i])):
                r.append(self.matrix[i][I] + other.matrix[i][I])
            add.append(r)

        return Matrix(add)


mr1 = Matrix([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
mr2 = Matrix([[11, 22, 33, 44], [55, 66, 77, 88], [99, 100, 111, 122]])
print(f"Первая матрица {mr1}")
print(f"Вторая матрица {mr2}")
print(f"Сумма матриц {mr1} + {mr2} = {mr1 + mr2}")
